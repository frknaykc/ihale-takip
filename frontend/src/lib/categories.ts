export interface Category {
  name: string
  primaryKeywords: string[]   // Ana anahtar kelimeler (kesin eÅŸleÅŸme)
  secondaryKeywords: string[] // Ä°kincil anahtar kelimeler (destekleyici)
  excludeKeywords: string[]   // HariÃ§ tutulacak kelimeler
}

export interface Categories {
  [key: string]: Category
}

export const categories: Categories = {
  'bilisim_teknolojileri': {
    name: 'ðŸ’» BiliÅŸim & GÃ¼venlik',
    primaryKeywords: [
      // Temel BiliÅŸim
      'bilgisayar', 'biliÅŸim', 'yazÄ±lÄ±m', 'donanÄ±m', 'network',
      'server', 'sunucu', 'veri merkezi', 'datacenter',

      // DonanÄ±m
      'masaÃ¼stÃ¼', 'laptop', 'dizÃ¼stÃ¼', 'iÅŸlemci', 'cpu',
      'ram', 'bellek', 'harddisk', 'ssd', 'hdd', 'anakart',
      'ekran kartÄ±', 'gpu', 'monitÃ¶r', 'ups', 'printer',

      // YazÄ±lÄ±m
      'microsoft', 'windows', 'linux', 'oracle', 'sql',
      'erp', 'crm', 'lisans', 'antivirÃ¼s', 'antivirus',

      // Network
      'switch', 'router', 'modem', 'firewall', 'gÃ¼venlik duvarÄ±',
      'access point', 'fiber', 'cat6', 'cat7',

      // GÃ¼venlik
      'kamera sistemi', 'cctv', 'ip kamera', 'nvr', 'dvr',
      'kartlÄ± geÃ§iÅŸ', 'yÃ¼z tanÄ±ma'
    ],
    secondaryKeywords: [
      'sistem', 'altyapÄ±', 'aÄŸ', 'elektronik', 'digital',
      'dijital', 'teknoloji', 'yazÄ±cÄ±', 'tarayÄ±cÄ±', 'scanner',
      'kablolama', 'kurulum', 'gÃ¼ncelleme', 'yedekleme',
      'bakÄ±m', 'onarÄ±m', 'teknik servis', 'it', 'bt'
    ],
    excludeKeywords: [
      // YanlÄ±ÅŸ sÄ±nÄ±flandÄ±rmayÄ± Ã¶nlemek iÃ§in
      'fuel', 'kalyak', 'yakÄ±t', 'petrol', 'lpg', 'doÄŸalgaz',
      'mutfak', 'yemek', 'gÄ±da', 'temizlik', 'kÄ±rtasiye',
      'mobilya', 'taÅŸÄ±nmaz', 'gayrimenkul', 'arsa', 'bina',
      'inÅŸaat', 'tadilat', 'onarÄ±m', 'bakÄ±m', 'malzeme',
      'hÄ±rdavat', 'tekstil', 'giyim', 'kÄ±yafet', 'ilaÃ§',
      'tÄ±bbi', 'medikal', 'araÃ§', 'vasÄ±ta', 'otomobil'
    ]
  },
  'diger': {
    name: 'ðŸ“‹ DiÄŸer',
    primaryKeywords: [],
    secondaryKeywords: [],
    excludeKeywords: []
  }
}

export function classifyTender(title: string, description?: string): string {
  const text = (title + ' ' + (description || '')).toLowerCase()
  
  // TÃ¼rkÃ§e karakterleri normalize et
  const normalizedText = text
    .replace(/Ã§/g, 'c')
    .replace(/ÄŸ/g, 'g')
    .replace(/Ä±/g, 'i')
    .replace(/Ã¶/g, 'o')
    .replace(/ÅŸ/g, 's')
    .replace(/Ã¼/g, 'u')
  
  const category = categories.bilisim_teknolojileri
  
  // Ã–nce hariÃ§ tutulan kelimeleri kontrol et
  for (const excludeWord of category.excludeKeywords) {
    const normalizedExclude = excludeWord
      .toLowerCase()
      .replace(/Ã§/g, 'c')
      .replace(/ÄŸ/g, 'g')
      .replace(/Ä±/g, 'i')
      .replace(/Ã¶/g, 'o')
      .replace(/ÅŸ/g, 's')
      .replace(/Ã¼/g, 'u')
    
    // EÄŸer hariÃ§ tutulan bir kelime varsa, direkt diÄŸer kategorisine at
    if (normalizedText.includes(normalizedExclude)) {
      return 'diger'
    }
  }
  
  let primaryMatches = 0
  let secondaryMatches = 0
  
  // Ana anahtar kelimeleri kontrol et
  for (const keyword of category.primaryKeywords) {
    const normalizedKeyword = keyword
      .toLowerCase()
      .replace(/Ã§/g, 'c')
      .replace(/ÄŸ/g, 'g')
      .replace(/Ä±/g, 'i')
      .replace(/Ã¶/g, 'o')
      .replace(/ÅŸ/g, 's')
      .replace(/Ã¼/g, 'u')
    
    if (normalizedText.includes(normalizedKeyword)) {
      primaryMatches++
    }
  }
  
  // Ä°kincil anahtar kelimeleri kontrol et
  for (const keyword of category.secondaryKeywords) {
    const normalizedKeyword = keyword
      .toLowerCase()
      .replace(/Ã§/g, 'c')
      .replace(/ÄŸ/g, 'g')
      .replace(/Ä±/g, 'i')
      .replace(/Ã¶/g, 'o')
      .replace(/ÅŸ/g, 's')
      .replace(/Ã¼/g, 'u')
    
    if (normalizedText.includes(normalizedKeyword)) {
      secondaryMatches++
    }
  }
  
  // SÄ±nÄ±flandÄ±rma kurallarÄ±:
  // 1. En az 1 ana anahtar kelime eÅŸleÅŸmesi olmalÄ±
  // 2. Ya birden fazla ana anahtar kelime eÅŸleÅŸmesi
  // 3. Ya da bir ana anahtar kelime + en az bir ikincil kelime eÅŸleÅŸmesi
  if (primaryMatches > 0 && (primaryMatches > 1 || secondaryMatches > 0)) {
    return 'bilisim_teknolojileri'
  }
  
  return 'diger'
}

export function getCategoryName(categoryKey: string): string {
  return categories[categoryKey]?.name || categories.diger.name
}

export function getAllCategories(): [string, string][] {
  return Object.entries(categories).map(([key, category]) => [key, category.name])
}